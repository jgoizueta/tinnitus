[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tinnitus-sound-therapy"
version = "1.0.0"
description = "Python port of MatLab tinnitus sound therapy implementation for generating spectral ripple modulated sounds"
readme = "README.md"
license = {text = "CC BY-NC-SA 4.0"}
authors = [
    {name = "Python Port", email = "noreply@example.com"},
]
maintainers = [
    {name = "Python Port", email = "noreply@example.com"},
]
keywords = ["tinnitus", "sound-therapy", "audio", "signal-processing", "research"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "soundfile>=0.10.0",
    "scipy>=1.7.0",
    "tqdm>=4.64.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
"Homepage" = "https://github.com/yourusername/tinnitus-sound-therapy"
"Bug Reports" = "https://github.com/yourusername/tinnitus-sound-therapy/issues"
"Source" = "https://github.com/yourusername/tinnitus-sound-therapy"
"Original Research" = "https://www.sciencedirect.com/science/article/pii/S0378595525001534"
"Original Data" = "https://data.ncl.ac.uk/articles/software/Tinnitus_Spectral_Ripple_Sound_Therapy_Files/27109693"

[project.scripts]
tinnitus-therapy = "tinnitus_sound_therapy:main"

[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["test_implementation.py"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=tinnitus_sound_therapy",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["tinnitus_sound_therapy"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]